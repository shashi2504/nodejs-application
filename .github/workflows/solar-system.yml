name: NodeJs Application Workflow

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

on:
  push:
    branches:
      - main
      - 'feature/*'

jobs:
  unit-testing:
    name: Unit Testing
    strategy:
      matrix:
        nodejs-versions: [18, 20]
        operating-systems: [ubuntu-latest, macos-latest]
        exclude:
          - nodejs-versions: 18
            operating-systems: macos-latest
    runs-on: ${{ matrix.operating-systems }}
    steps:
      - name: Checkout Repositroy
        uses: actions/checkout@v4

      - name: Setup the NodeJS Versions - ${{ matrix.nodejs-versions }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.nodejs-versions }}

      - name: Cache Dependencies   # Added new Dependencies 
        uses: actions/cache@v3      # Updated Version
        with:
          path: node_modules
          key: ${{ runner.os }}--node_modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        run: npm install

      - name: Unit Testing
        id: nodejs-unit-testing
        run: npm test

      - name : Storing the Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: mocha-test-report
          path: test-results.xml

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repositroy
        uses: actions/checkout@v4

      - name: Setup the NodeJS Versions - 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}--node_modules-${{ hashFiles('package-lock.json') }}  # Added Cache
  

      - name: Install Dependencies
        run: npm install

      - name: Code Coverage
        continue-on-error: true
        run: npm run coverage

      - name : Storing the Test Results
        uses: actions/upload-artifact@v3
        with:
          name: nyc-istanbul-report
          path: coverage
          retention-days: 5

  docker:
    needs: [unit-testing, code-coverage]
    name: Containerization
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}   # Updated Username
          password: ${{ secrets.DOCKER_PASSWORD }}